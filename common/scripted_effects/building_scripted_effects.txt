Add_building_to_slot_with_time_constraint = { ## THIS IS FOR ADDING BUILDINGS FOR NO COST BUT STILL REQUIRING BUILD TIME, STATE SCOPE
	hidden_effect = {
		if = {
			limit = { ## TRIES TO BUILD IN 1st SLOT THEN IN SECOND, WILL ALWAYS REPLACE SECOND BUILDING
				NOT = {
					has_variable = building_1
				}
			}
			hidden_effect = {
				clear_building_1_effects = yes
			}
			set_variable = { building_1 = REQUESTED_BUILDING }
			set_variable = { time_left_building_1 = CONSTRUCT_TIME}
			set_state_flag = building_1_to_be_handled
			time_calculation_for_buildings = yes
			add_to_array = {
				array = global.building_state_constructer_1
				value = THIS.id
			}
			if = {
				limit = {
					check_variable = {building_1 = unique_building_on_state}
				}
				set_state_flag = wonder_built_no_destroy_1
			}
		}else = {
			hidden_effect = {
				clear_building_2_effects = yes
			}
			set_variable = { building_2 = REQUESTED_BUILDING }
			set_variable = { time_left_building_2 = CONSTRUCT_TIME}
			time_calculation_for_buildings = yes
			add_to_array = {
				array = global.building_state_constructer_2
				value = THIS.id
			}
			if = {
				limit = {
					check_variable = {building_2 = unique_building_on_state}
				}
				set_state_flag = wonder_built_no_destroy_2
			}
		}
	}
}
Add_building_to_slot_immediately = { ## THIS ADDS BUILDINGS FOR FREE AND IMMEDIATLY, STATE SCOPE
	custom_effect_tooltip = add_building_to_slot
	hidden_effect = {
		if = {
			limit = { ## TRIES TO BUILD IN 1st SLOT THEN IN SECOND, WILL ALWAYS REPLACE SECOND BUILDING
				NOT = {
					has_variable = building_1
				}
			}
			hidden_effect = {
				clear_building_1_effects = yes
			}
			set_variable = { building_1 = REQUESTED_BUILDING }
			set_temp_variable = {idea_token_passer = building_1}
			controller = {
				add_ideas = var:building_1
			}
			meta_effect = {
				text = {
					[BUILDING_NAME]_add_effect = yes
				}
				BUILDING_NAME = "[?building_1.GetTokenKey]"
				debug = yes
			}
			if = {
				limit = {
					check_variable = {building_1 = unique_building_on_state}
				}
				set_state_flag = wonder_built_no_destroy_1
			}
		}else = {
			hidden_effect = {
				clear_building_2_effects = yes
			}
			set_variable = { building_2 = REQUESTED_BUILDING }
			set_temp_variable = {idea_token_passer = building_2}
			controller = {
				add_ideas = var:building_2
			}
			meta_effect = {
				text = {
					[BUILDING_NAME]_add_effect = yes
				}
				BUILDING_NAME = "[?building_2.GetTokenKey]"
			}
			if = {
				limit = {
					check_variable = {building_2 = unique_building_on_state}
				}
				set_state_flag = wonder_built_no_destroy_2
			}
		}
	}
}


#### ADDING BUILDING FOR EXAMPLE IN FOCUS TREE -- SPECFIC STATE EXAMPLE
# 287 = {
# 	set_temp_variable = {REQUESTED_BUILDING = token:military_academy_2}
# 	Add_building_to_slot_immediately = yes
# }


#### ADDING BUILDING FOR EXAMPLE IN FOCUS TREE -- ANY EMPTY BUILDING STATE
# random_owned_state = {
# 	limit = {
# 		has_avaliable_building_slot = yes
# 	}
# 	set_temp_variable = {REQUESTED_BUILDING = token:military_academy_2}
# 	Add_building_to_slot_immediately = yes
# }


clear_building_1_effects = { ## USE THIS FOR GETTING RID OF A BUILDING
	custom_effect_tooltip = clear_building_off_slot_1
	hidden_effect = {
		if = {
			limit = { ## FIND IF ANY STATE ALREADY HAS BUILDING AS NOT TO REMOVE IDEA FROM BUILDINGS THAT ARE THERE
				NOT ={
					controller = {
						any_controlled_state = {
							has_variable = building_name_passer
						}
					}
				}
			}
			remove_ideas = var:building_name_passer
		}
		meta_effect = {
			text = {
				[BUILDING_NAME]_remove_effect = yes
			}
			BUILDING_NAME = "[?building_1.GetTokenKey]"
		}
		clear_variable = building_1
		clr_state_flag = tile_blocker_building_1
	}
}
clear_building_2_effects = { ## USE THIS FOR GETTING RID OF A BUILDING
	custom_effect_tooltip = clear_building_off_slot_2
	hidden_effect = {
		if = {
			limit = { ## FIND IF ANY STATE ALREADY HAS BUILDING AS NOT TO REMOVE IDEA FROM BUILDINGS THAT ARE THERE
				NOT ={
					controller = {
						any_controlled_state = {
							has_variable = building_name_passer
						}
					}
				}
			}
			remove_ideas = var:building_name_passer
		}
		meta_effect = {
			text = {
				[BUILDING_NAME]_remove_effect = yes
			}
			BUILDING_NAME = "[?building_2.GetTokenKey]"
		}
		clear_variable = building_2
		clr_state_flag = tile_blocker_building_2
	}
}

add_building_to_construct_slot_1 = {
	var:state_located_for_building_changes = {
		hidden_effect = {
			clear_building_1_effects = yes
		}
		set_variable = { building_1 = potential_building_holder_for_event }
		set_variable = { time_left_building_1 = potential_time_left_building_holder_for_event}
		set_state_flag = building_1_to_be_handled
		time_calculation_for_buildings = yes
		add_to_array = {
			array = global.building_state_constructer_1
			value = THIS.id
		}
	}
	ROOT = {
		subtract_from_variable = { currency_amount^primary_currency = potential_cost_holder_for_event }
	}
}
add_building_to_construct_slot_2 = {
	var:state_located_for_building_changes = {
		hidden_effect = {
			clear_building_2_effects = yes
		}
		set_variable = { building_2 = potential_building_holder_for_event }
		set_variable = { time_left_building_2 = potential_time_left_building_holder_for_event}
		time_calculation_for_buildings = yes
		add_to_array = {
			array = global.building_state_constructer_2
			value = THIS.id
		}
	}
	ROOT = {
		subtract_from_variable = { currency_amount^primary_currency = potential_cost_holder_for_event }
	}
}

sends_event_for_replacement_building = {
	if = {
		limit = {
			ROOT = {
				has_country_flag = building_1_open
			}
			has_variable = building_1
		}
		ROOT = {
			country_event = BUILDING.1
		}
		### EVENT FOR BUILDING 1 CHANGE
	}else_if = {
		limit = {
			ROOT = {
				has_country_flag = building_2_open
			}
			has_variable = building_2
		}
		ROOT = {
			country_event = BUILDING.2
		}
		### EVENT FOR BUILDING 2 CHANGE
	}
}
sends_event_for_replacement_building_unique_building = {
	if = {
		limit = {
			ROOT = {
				has_country_flag = building_1_open
			}
			has_variable = building_1
		}
		ROOT = {
			country_event = BUILDING.3
		}
		### EVENT FOR BUILDING 1 CHANGE
	}else_if = {
		limit = {
			has_country_flag = building_2_open
			has_variable = building_2
		}
		ROOT = {
			country_event = BUILDING.4
		}
		### EVENT FOR BUILDING 2 CHANGE
	}
}


time_calculation_for_buildings = {
	set_temp_variable = {speed_multiplier_factor = modifier@production_speed_buildings_factor}
	subtract_from_temp_variable = {speed_multiplier_factor = modifier@consumer_goods_factor}
	add_to_temp_variable = {speed_multiplier_factor = 1}

	if = {
		limit = {
			has_state_flag = building_1_to_be_handled
		}
		divide_variable = {time_left_building_1 = speed_multiplier_factor}
		clr_state_flag = building_1_to_be_handled
	}else = {
		divide_variable = {time_left_building_2 = speed_multiplier_factor}
	}
}

light_shipyard_1_add_effect = {
	add_building_construction = { type = dockyard level = 5 instant_build = yes}
}
light_shipyard_1_remove_effect = {
	add_building_construction = { type = dockyard level = -5 instant_build = yes}
}
light_shipyard_2_add_effect = {
	add_building_construction = { type = dockyard level = 10 instant_build = yes}
}
light_shipyard_2_remove_effect = {
	add_building_construction = { type = dockyard level = -10 instant_build = yes}
}
light_shipyard_3_add_effect = {
	add_building_construction = { type = dockyard level = 15 instant_build = yes}
}
light_shipyard_3_remove_effect = {
	add_building_construction = { type = dockyard level = -15 instant_build = yes}
}
medium_shipyard_1_add_effect = {
  	add_building_construction = { type = dockyard level = 10 instant_build = yes}
}
medium_shipyard_1_remove_effect = {
  	add_building_construction = { type = dockyard level = -10 instant_build = yes}
}
medium_shipyard_2_add_effect = {
  	add_building_construction = { type = dockyard level = 15 instant_build = yes}
}
medium_shipyard_2_remove_effect = {
  	add_building_construction = { type = dockyard level = -15 instant_build = yes}
}
heavy_shipyard_1_add_effect = {
  	add_building_construction = { type = dockyard level = 15 instant_build = yes}
}
heavy_shipyard_1_remove_effect = {
  	add_building_construction = { type = dockyard level = -15 instant_build = yes}
}
arms_factory_1_add_effect = {
  	add_building_construction = { type = arms_factory level = 5 instant_build = yes}
}
arms_factory_1_remove_effect = {
  	add_building_construction = { type = arms_factory level = -5 instant_build = yes}
}
soft_arms_factory_1_add_effect = {
	add_building_construction = { type = arms_factory level = 10 instant_build = yes}
}
soft_arms_factory_1_add_effect = {
	add_building_construction = { type = arms_factory level = -10 instant_build = yes}
}
soft_arms_factory_2_add_effect = {
	add_building_construction = { type = arms_factory level = 15 instant_build = yes}
}
soft_arms_factory_2_add_effect = {
  	add_building_construction = { type = arms_factory level = -15 instant_build = yes}
}
tank_factory_1_add_effect = {
  	add_building_construction = { type = arms_factory level = 10 instant_build = yes}
}
tank_factory_1_add_effect = {
  	add_building_construction = { type = arms_factory level = -10 instant_build = yes}
}
tank_factory_2_add_effect = {
  	add_building_construction = { type = arms_factory level = 15 instant_build = yes}
}
tank_factory_2_add_effect = {
  	add_building_construction = { type = arms_factory level = -15 instant_build = yes}
}
starfighter_factory_1_add_effect = {
  	add_building_construction = { type = arms_factory level = -5 instant_build = yes}
}
starfighter_factory_1_remove_effect = {
  	add_building_construction = { type = arms_factory level = -5 instant_build = yes}
}
starfighter_factory_2_add_effect = {
  	add_building_construction = { type = arms_factory level = 10 instant_build = yes}
}
starfighter_factory_2_remove_effect = {
  	add_building_construction = { type = arms_factory level = -10 instant_build = yes}
}
starfighter_factory_3_add_effect = {
  	add_building_construction = { type = arms_factory level = 15 instant_build = yes}
}
starfighter_factory_3_remove_effect = {
  	add_building_construction = { type = arms_factory level = -15 instant_build = yes}
}
starbomber_factory_1_add_effect = {
  	add_building_construction = { type = arms_factory level = 10 instant_build = yes}
}
starbomber_factory_1_remove_effect = {
  	add_building_construction = { type = arms_factory level = -10 instant_build = yes}
}
starbomber_factory_2_add_effect = {
  	add_building_construction = { type = arms_factory level = 15 instant_build = yes}
}
starbomber_factory_2_remove_effect = {
  	add_building_construction = { type = arms_factory level = -15 instant_build = yes}
}
intelligence_center_1_add_effect = {
  	add_building_construction = { type = radar_station level = 1 instant_build = yes}
}
intelligence_center_1_remove_effect = {
  	add_building_construction = { type = radar_station level = -1 instant_build = yes}
}
sensor_array_1_add_effect = {
  	add_building_construction = { type = radar_station level = 2 instant_build = yes}
}
sensor_array_1_remove_effect = {
  	add_building_construction = { type = radar_station level = -2 instant_build = yes}
}
sensor_array_2_add_effect = {
  	add_building_construction = { type = radar_station level = 4 instant_build = yes}
}
sensor_array_2_remove_effect = {
  	add_building_construction = { type = radar_station level = -4 instant_build = yes}
}
anti_air_1_add_effect = {
	add_building_construction = { type = anti_air_building level = 1 instant_build = yes}
}
anti_air_1_remove_effect = {
	add_building_construction = { type = anti_air_building level = -1 instant_build = yes}
}
anti_air_2_add_effect = {
	add_building_construction = { type = anti_air_building level = 2 instant_build = yes}
}
anti_air_2_remove_effect = {
	add_building_construction = { type = anti_air_building level = -2 instant_build = yes}
}
anti_air_3_add_effect = {
	add_building_construction = { type = anti_air_building level = 4 instant_build = yes}
}
anti_air_3_remove_effect = {
	add_building_construction = { type = anti_air_building level = -4 instant_build = yes}
}
corporate_office_1_add_effect = {
	controller = {
		add_to_variable = { building_income = 0.5}
	}
}
corporate_office_1_remove_effect = {
	controller = {
		add_to_variable = { building_income = -0.5}
	}
}
corporate_office_2_add_effect = {
	controller = {
		add_to_variable = { building_income = 1.0 }
	}
}
corporate_office_2_remove_effect = {
	controller = {
		add_to_variable = { building_income = -1.0}
	}
}
corporate_office_3_add_effect = {
	controller = {
		add_to_variable = { building_income = 2.0}
	}
}
corporate_office_3_remove_effect = {
	controller = {
		add_to_variable = { building_income = -2.0}
	}
}
recycle_center_1_add_effect = {
		add_resource = {
			type = oil
			amount = 7
			state = THIS
		}
		add_resource = {
			type = aluminium
			amount = 7
			state = THIS
		}
		add_resource = {
			type = chromium
			amount = 7
			state = THIS
		}
		add_resource = {
			type = tungsten
			amount = 7
			state = THIS
		}
		add_resource = {
			type = steel
			amount = 7
			state = THIS
		}
}
recycle_center_1_remove_effect = {
		add_resource = {
			type = oil
			amount = -7
			state = THIS
		}
		add_resource = {
			type = aluminium
			amount = -7
			state = THIS
		}
		add_resource = {
			type = chromium
			amount = -7
			state = THIS
		}
		add_resource = {
			type = tungsten
			amount = -7
			state = THIS
		}
		add_resource = {
			type = steel
			amount = -7
			state = THIS
		}
}
recycle_center_2_add_effect = {
		add_resource = {
			type = oil
			amount = 14
			state = THIS
		}
		add_resource = {
			type = aluminium
			amount = 14
			state = THIS
		}
		add_resource = {
			type = chromium
			amount = 14
			state = THIS
		}
		add_resource = {
			type = tungsten
			amount = 14
			state = THIS
		}
		add_resource = {
			type = steel
			amount = 14
			state = THIS
		}
}
recycle_center_2_remove_effect = {
		add_resource = {
			type = oil
			amount = -14
			state = THIS
		}
		add_resource = {
			type = aluminium
			amount = -14
			state = THIS
		}
		add_resource = {
			type = chromium
			amount = -14
			state = THIS
		}
		add_resource = {
			type = tungsten
			amount = -14
			state = THIS
		}
		add_resource = {
			type = steel
			amount = -14
			state = THIS
		}
}
recycle_center_3_add_effect = {
		add_resource = {
			type = oil
			amount = 25
			state = THIS
		}
		add_resource = {
			type = aluminium
			amount = 25
			state = THIS
		}
		add_resource = {
			type = chromium
			amount = 25
			state = THIS
		}
		add_resource = {
			type = tungsten
			amount = 25
			state = THIS
		}
		add_resource = {
			type = steel
			amount = 25
			state = THIS
	}
}
recycle_center_3_remove_effect = {
	add_resource = {
		type = oil
		amount = -25
		state = THIS
	}
	add_resource = {
		type = aluminium
		amount = -25
		state = THIS
	}
	add_resource = {
		type = chromium
		amount = -25
		state = THIS
	}
	add_resource = {
		type = tungsten
		amount = -25
		state = THIS
	}
	add_resource = {
		type = steel
		amount = -25
		state = THIS
	}
}
spice_market_1_add_effect = {
	add_resource = {
		type = rubber
		amount = 5
		state = THIS
	}
}
spice_market_1_remove_effect = {
	add_resource = {
		type = rubber
		amount = -5
		state = THIS
	}
}
spice_market_2_add_effect = {
	add_resource = {
		type = rubber
		amount = 10
		state = THIS
	}
}
spice_market_2_remove_effect = {
	add_resource = {
		type = rubber
		amount = -10
		state = THIS
	}
}
spice_market_3_add_effect = {
	add_resource = {
		type = rubber
		amount = 15
		state = THIS
	}
}
spice_market_3_remove_effect = {
	add_resource = {
		type = rubber
		amount = -15
		state = THIS
	}
}

##### UNIQUE BUILDINGS #####


#### Example format of unique building
# example_building_add_effect = { - says to the code this is what happens when the building is built for the first time. I.e. adding resources to the state
	#add_resource = {
	#	type = rubber
	#	amount = 10
	#	state = THIS
	#}
#}
# example_building_remove_effect = { - says to the code this is what happens when the building is deconstructed. ONLY DECONSTRUCTED NOT OWNERSHIP CHANGING
	#add_resource = {
	#	type = rubber
	#	amount = -10
	#	state = THIS
	#}
#}

## Subsequent Levels have a 2, 3 before add and removal effect like so

# example_building_2_add_effect = { - says to the code this is what happens when the building is built for the first time. I.e. adding resources to the state
	#add_resource = {
	#	type = rubber
	#	amount = 10
	#	state = THIS
	#}
#}
# example_building_2_remove_effect = { - says to the code this is what happens when the building is deconstructed. ONLY DECONSTRUCTED NOT OWNERSHIP CHANGING
	#add_resource = {
	#	type = rubber
	#	amount = -10
	#	state = THIS
	#}
#}



mastfarian_fuel_add_effect = { ## 
	add_resource = {
		type = oil
		amount = 10
		state = THIS
	}
}
mastfarian_fuel_remove_effect = { ## 
	add_resource = {
		type = oil
		amount = -10
		state = THIS
	}
}
mastfarian_fuel_2_add_effect = { ## 
	add_resource = {
		type = oil
		amount = 25
		state = THIS
	}
}
mastfarian_fuel_2_remove_effect = { ## 
	add_resource = {
		type = oil
		amount = -25
		state = THIS
	}
}
mastfarian_fuel_3_add_effect = { ## 
	add_resource = {
		type = oil
		amount = 50
		state = THIS
	}
}
mastfarian_fuel_3_remove_effect = { ## 
	add_resource = {
		type = oil
		amount = -50
		state = THIS
	}
}


cloud_city_add_effect = {
	add_resource = {
		type = oil
		amount = 20
		state = THIS
	}
}
cloud_city_remove_effect = {
	add_resource = {
		type = oil
		amount = -20
		state = THIS
	}
}
cloud_city_2_add_effect = {
	add_resource = {
		type = oil
		amount = 30
		state = THIS
	}
}
cloud_city_2_remove_effect = {
	add_resource = {
		type = oil
		amount = -30
		state = THIS
	}
}
cloud_city_3_add_effect = {
	add_resource = {
		type = oil
		amount = 40
		state = THIS
	}
}
cloud_city_3_remove_effect = {
	add_resource = {
		type = oil
		amount = -40
		state = THIS
	}
}

mustafar_works_add_effect = {
	add_resource = {
		type = steel
		amount = 20
		state = THIS
	}
}
mustafar_works_remove_effect = {
	add_resource = {
		type = steel
		amount = -20
		state = THIS
	}
}
mustafar_works_2_add_effect = {
	add_resource = {
		type = steel
		amount = 30
		state = THIS
	}
}
mustafar_works_2_remove_effect = {
	add_resource = {
		type = steel
		amount = -30
		state = THIS
	}
}
mustafar_works_3_add_effect = {
	add_resource = {
		type = steel
		amount = 40
		state = THIS
	}
}
mustafar_works_3_remove_effect = {
	add_resource = {
		type = steel
		amount = -40
		state = THIS
	}
}

kessel_coaxium_mines_add_effect = {
	add_resource = {
		type = oil
		amount = 20
		state = THIS
	}
}
kessel_coaxium_mines_remove_effect = {
	add_resource = {
		type = oil
		amount = -20
		state = THIS
	}
}
kessel_coaxium_mines_2_add_effect = {
	add_resource = {
		type = oil
		amount = 30
		state = THIS
	}
}
kessel_coaxium_mines_2_remove_effect = {
	add_resource = {
		type = oil
		amount = -30
		state = THIS
	}
}
kessel_coaxium_mines_3_add_effect = {
	add_resource = {
		type = oil
		amount = 40
		state = THIS
	}
}
kessel_coaxium_mines_3_remove_effect = {
	add_resource = {
		type = oil
		amount = -40
		state = THIS
	}
}

casino_catonica_add_effect = {
	controller = {
		add_to_variable = { building_income = 0.7}
	}
}
casino_catonica_remove_effect = {
	controller = {
		add_to_variable = { building_income = -0.7}
	}
}
casino_catonica_2_add_effect = {
	controller = {
		add_to_variable = { building_income = 1.4}
	}
}
casino_catonica_2_remove_effect = {
	controller = {
		add_to_variable = { building_income = -1.4}
	}
}
casino_catonica_3_add_effect = {
	controller = {
		add_to_variable = { building_income = 3.0}
	}
}
casino_catonica_3_remove_effect = {
	controller = {
		add_to_variable = { building_income = -3.0}
	}
}

#### TILE BLOCKERS ####
shadowlands_tile_blocker_cost_effect = { ## EMPTY AS ONLY REMOVED BY FOCUS

}
shadowlands_spiders_tile_blocker_cost_effect = { ## EMPTY AS ONLY REMOVED BY FOCUS

}

### EXAMPLE
undercity_slums_tile_blocker_cost_effect = { ## EXAMPLE OF COST BASED TILE BLOCKER
	if = {
		limit = {
			controller = {
				has_political_power > 100 ## Finds controller of states politcal power
			}
			check_variable = {currency_amount^primary_currency > 150} ## ACTUAL TRIGGER TO DECIDE WHAT COST OF THE TILE BLOCKER IS in money
		}
		subtract_from_variable = { currency_amount^primary_currency = 150 } ## REMOVES COST
		add_political_power = -100

		## BELOW IS ALWAYS NEEDED, CAN HAVE TILE BLOCKER IDEAS THAT WILL BE REMOVED BY THIS, ONLY COUNTRY IDEAS NOT STATE
		check_building_1_or_2_removal_effect = yes
	}
}
untamed_jungle_tile_blocker_cost_effect = { ## EXAMPLE OF COST BASED TILE BLOCKER
	if = {
		limit = {
			controller = {
				has_political_power > 100 ## Finds controller of states politcal power
			}
			check_variable = {currency_amount^primary_currency > 150} ## ACTUAL TRIGGER TO DECIDE WHAT COST OF THE TILE BLOCKER IS in money
		}
		subtract_from_variable = { currency_amount^primary_currency = 150 } ## REMOVES COST
		add_political_power = -100

		## BELOW IS ALWAYS NEEDED, CAN HAVE TILE BLOCKER IDEAS THAT WILL BE REMOVED BY THIS, ONLY COUNTRY IDEAS NOT STATE
		check_building_1_or_2_removal_effect = yes
	}
}
dead_land_desert_tile_blocker_cost_effect = { ## EXAMPLE OF COST BASED TILE BLOCKER
	if = {
		limit = {
			controller = {
				has_political_power > 100 ## Finds controller of states politcal power
			}
			check_variable = {currency_amount^primary_currency > 150} ## ACTUAL TRIGGER TO DECIDE WHAT COST OF THE TILE BLOCKER IS in money
		}
		subtract_from_variable = { currency_amount^primary_currency = 150 } ## REMOVES COST
		add_political_power = -100

		## BELOW IS ALWAYS NEEDED, CAN HAVE TILE BLOCKER IDEAS THAT WILL BE REMOVED BY THIS, ONLY COUNTRY IDEAS NOT STATE
		check_building_1_or_2_removal_effect = yes
	}
}
lava_fields_tile_blocker_cost_effect = { ## EXAMPLE OF COST BASED TILE BLOCKER
	if = {
		limit = {
			controller = {
				has_political_power > 100 ## Finds controller of states politcal power
			}
			check_variable = {currency_amount^primary_currency > 150} ## ACTUAL TRIGGER TO DECIDE WHAT COST OF THE TILE BLOCKER IS in money
		}
		subtract_from_variable = { currency_amount^primary_currency = 150 } ## REMOVES COST
		add_political_power = -100

		## BELOW IS ALWAYS NEEDED, CAN HAVE TILE BLOCKER IDEAS THAT WILL BE REMOVED BY THIS, ONLY COUNTRY IDEAS NOT STATE
		check_building_1_or_2_removal_effect = yes
	}
}
rock_slides_tile_blocker_cost_effect = { ## EXAMPLE OF COST BASED TILE BLOCKER
	if = {
		limit = {
			controller = {
				has_political_power > 100 ## Finds controller of states politcal power
			}
			check_variable = {currency_amount^primary_currency > 150} ## ACTUAL TRIGGER TO DECIDE WHAT COST OF THE TILE BLOCKER IS in money
		}
		subtract_from_variable = { currency_amount^primary_currency = 150 } ## REMOVES COST
		add_political_power = -100

		## BELOW IS ALWAYS NEEDED, CAN HAVE TILE BLOCKER IDEAS THAT WILL BE REMOVED BY THIS, ONLY COUNTRY IDEAS NOT STATE
		check_building_1_or_2_removal_effect = yes
	}
}
dangerous_fauna_tile_blocker_cost_effect = { ## EXAMPLE OF COST BASED TILE BLOCKER
	if = {
		limit = {
			controller = {
				has_political_power > 100 ## Finds controller of states politcal power
			}
			check_variable = {currency_amount^primary_currency > 150} ## ACTUAL TRIGGER TO DECIDE WHAT COST OF THE TILE BLOCKER IS in money
		}
		subtract_from_variable = { currency_amount^primary_currency = 150 } ## REMOVES COST
		add_political_power = -100

		## BELOW IS ALWAYS NEEDED, CAN HAVE TILE BLOCKER IDEAS THAT WILL BE REMOVED BY THIS, ONLY COUNTRY IDEAS NOT STATE
		check_building_1_or_2_removal_effect = yes
	}
}
ruined_city_tile_blocker_cost_effect = { ## EXAMPLE OF COST BASED TILE BLOCKER
	if = {
		limit = {
			controller = {
				has_political_power > 100 ## Finds controller of states politcal power
			}
			check_variable = {currency_amount^primary_currency > 150} ## ACTUAL TRIGGER TO DECIDE WHAT COST OF THE TILE BLOCKER IS in money
		}
		subtract_from_variable = { currency_amount^primary_currency = 150 } ## REMOVES COST
		add_political_power = -100

		## BELOW IS ALWAYS NEEDED, CAN HAVE TILE BLOCKER IDEAS THAT WILL BE REMOVED BY THIS, ONLY COUNTRY IDEAS NOT STATE
		check_building_1_or_2_removal_effect = yes
	}
}
inhospitable_area_tile_blocker_cost_effect = {
	
}
snow_area_tile_blocker_cost_effect = { ## EXAMPLE OF COST BASED TILE BLOCKER
	if = {
		limit = {
			controller = {
				has_political_power > 100 ## Finds controller of states politcal power
			}
			check_variable = {currency_amount^primary_currency > 150} ## ACTUAL TRIGGER TO DECIDE WHAT COST OF THE TILE BLOCKER IS in money
		}
		subtract_from_variable = { currency_amount^primary_currency = 150 } ## REMOVES COST
		add_political_power = -100

		## BELOW IS ALWAYS NEEDED, CAN HAVE TILE BLOCKER IDEAS THAT WILL BE REMOVED BY THIS, ONLY COUNTRY IDEAS NOT STATE
		check_building_1_or_2_removal_effect = yes
	}
}
check_building_1_or_2_removal_effect = {
	if = {
		limit = {
			check_variable = {building_1_or_2_holder = 1}
		}
		set_temp_variable = {building_name_passer = building_1}  ### THIS IS WHATS ACTUALLY REMOVING THE BUILDING
		clear_building_1_effects = yes
	}else = {
		set_temp_variable = {building_name_passer = building_2}  ### THIS IS WHATS ACTUALLY REMOVING THE BUILDING
		clear_building_2_effects = yes
	}
}



primitive_farm_add_effect = {
	add_state_modifier = {
		modifier = {
			local_manpower = 0.1
		}
	}
	controller = {
		add_to_variable = { building_income = 0.05}
	}
}

primitive_farm_remove_effect = {
	add_state_modifier = {
		modifier = {
			local_manpower = -0.1
		}
	}
	controller = {
		add_to_variable = { building_income = -0.05}
	}
}

primitive_industry_add_effect = {
	add_building_construction = { type = arms_factory level = 2 instant_build = yes}
}
primitive_industry_remove_effect = {
	add_building_construction = { type = arms_factory level = -2 instant_build = yes}
}


primitive_offices_add_effect = {
	controller = {
		add_to_variable = { building_income = 0.2}
	}
}
primitive_offices_remove_effect = {
	controller = {
		add_to_variable = { building_income = -0.2}
	}
}

primitive_resource_extraction_add_effect = {
	add_resource = {
		type = oil
		amount = 3
		state = THIS
	}
	add_resource = {
		type = aluminium
		amount = 3
		state = THIS
	}
	add_resource = {
		type = chromium
		amount = 3
		state = THIS
	}
	add_resource = {
		type = tungsten
		amount = 3
		state = THIS
	}
	add_resource = {
		type = steel
		amount = 3
		state = THIS
	}
}
primitive_resource_extraction_remove_effect = {
	add_resource = {
		type = oil
		amount = -3
		state = THIS
	}
	add_resource = {
		type = aluminium
		amount = -3
		state = THIS
	}
	add_resource = {
		type = chromium
		amount = -3
		state = THIS
	}
	add_resource = {
		type = tungsten
		amount = -3
		state = THIS
	}
	add_resource = {
		type = steel
		amount = -3
		state = THIS
	}
}
imperial_refinery_remove_effect = {

}


imperial_refinery_positive_add_effect = {
}

test_building_effect = {
	set_variable = {test_variable = token:primitive_industry}
	log = "[?test_variable]"
}


clear_left_over_building_event_variables = {
	var:state_located_for_building_changes = {
		clear_variable = potential_building_holder_for_event
		clear_variable = potential_time_left_building_holder_for_event
	}
	clear_variable = potential_cost_holder_for_event
	clear_variable = state_located_for_building_changes

}

_add_effect = { ## This is really stupid dont question it, also dont remove it or 10000000 errors

}
_remove_effect = { ## This is really stupid dont question it, also dont remove it or 10000000 errors

}
test_effect_market = {
	set_temp_variable = {item_to_buy = token:isd_1}
	set_temp_variable = {producer = KUA}
	meta_effect = {
		text = {
			add_equipment_to_stockpile = {
				type = [MARKET_ITEM]
				amount = amount_to_purchase
				producer = [PRODUCER]
			}
		}
		MARKET_ITEM = "[?item_to_buy.GetTokenKey]" 
		PRODUCER = "[?producer.GetTag]" 
	}
}

create_new_category_for_market = {
	clear_array = current_selected_market_category_array
	for_each_loop = {
		array = global.Market_array@var:market_category
		value = v
		index = i
		add_to_array = {
			array = current_selected_market_category_array
			value = global.Market_array@var:market_category^i
		}
	}
	sift_through_alliance_types = yes
}
sift_through_alliance_types = {
	if = {
		limit  ={
			has_government = imperial
		}
		set_temp_variable = {country_belongs_to_what_faction = global.empire_market_choice}
	}else_if = {
		limit = {
			has_government = democratic
		}
		set_temp_variable = {country_belongs_to_what_faction = global.republic_market_choice}
	}else = {
		set_temp_variable = {country_belongs_to_what_faction = global.neutral_market_choice}
	}

	for_each_loop = {
		array = current_selected_market_category_array
		value = v
		index = i
		set_temp_variable = {current_looking_at_equipment = v}
		if = {
			limit = {
				OR = {
					check_variable = {global.belonging_to_what_faction@var:current_looking_at_equipment = global.neutral_market_choice}
					NOT = {
						check_variable = {global.belonging_to_what_faction@var:current_looking_at_equipment = country_belongs_to_what_faction} #if they fit their faction type then they get access
					}
				}
			}
			add_to_temp_array = {
				array = removal_array
				value = i
			}
		}
	}
	set_temp_variable = {actual_index = 0}
	for_each_loop = {
		array = removal_array
		value = v
		set_temp_variable = {value_to_remove_test = v}
		subtract_from_temp_variable = {value_to_remove_test = actual_index}
		add_to_temp_variable = {actual_index = 1}
		remove_from_array = {
			array = current_selected_market_category_array
			index = value_to_remove_test
		}
	}
}
buy_item_scripted_effect = {
	set_temp_variable = {producer = global.who_owns_item@var:item_to_buy} ## THIS RELIES ON THE PRODUCER ACTUALLY HAVING THE ABILITY TO PRODUCE THE EQUIPMENT WHEN SELLING IT, OTHERWISE BAD SHIT HAPPENS
	subtract_from_variable = {currency_amount^primary_currency = total_price}
	if = {
		limit = {
			check_variable = {market_category = global.naval_market_category}
		}
		meta_effect = {
			text = {
				add_equipment_production = {
					equipment = {
						type = [MARKET_ITEM]
						creator = [PRODUCER]
					}
					requested_factories = 1
					progress = 1.00
					amount = amount_to_purchase
				}
			}
			MARKET_ITEM = "[?item_to_buy.GetTokenKey]"
			PRODUCER = "[?producer.GetTag]" 
		}
	}else = {
		multiply_temp_variable = {amount_to_purchase = 100}
		meta_effect = {
			text = {
				add_equipment_to_stockpile = {
					type = [MARKET_ITEM]
					amount = amount_to_purchase
					producer = [PRODUCER]
				}
			}
			MARKET_ITEM = "[?item_to_buy.GetTokenKey]" 
			PRODUCER = "[?producer.GetTag]" 
		}
	}
	var:producer = {
		add_to_variable = {currency_amount^primary_currency = total_price}
		add_to_array = {
			array = monthly_profit_array@var:item_to_buy
			value = total_price
		}
	}
	subtract_from_variable = {global.stock_of_item@var:item_to_buy = amount_to_purchase}
}

weekly_production_of_item_calculation_scripted_effect = {
	set_temp_variable = {temporary_factory_output_calculator = factories_on_item@var:current_item_we_are_looking_at}
	multiply_temp_variable = { temporary_factory_output_calculator = production_efficiency@var:current_item_we_are_looking_at }
	multiply_temp_variable = { temporary_factory_output_calculator = global.CONSTANT_FACTORY_OUTPUT_MULTIPLIER }
	divide_temp_variable = {temporary_factory_output_calculator = global.ic_cost@var:current_item_we_are_looking_at}
	set_variable = {weekly_production_of_item@var:current_item_we_are_looking_at = temporary_factory_output_calculator}
}

production_efficiency_calculator = {
	if = {
		limit = {
			check_variable = {factories_on_item@var:current_item_we_are_looking_at > 0}
		}
		set_variable = {temporary_efficiency_growth = global.CONSTANT_PRODUCTION_EFFICIENCY_GROWTH}

		set_temp_variable = {modifier_production_efficency = modifier@production_efficiency_multiplier}
		add_to_temp_variable = {modifier_production_efficency = 1}
		multiply_variable = {
			var = temporary_efficiency_growth
			value = modifier_production_efficency
		}
		add_to_variable = {production_efficiency@var:current_item_we_are_looking_at = temporary_efficiency_growth}
		if = {
			limit = {
				check_variable = {
					var = modifier@production_efficiency_cap_multiplier
					value = 0
					compare = not_equals
				}
			}
			set_variable = {capped_production_efficiency_amount = 1}
			set_temp_variable = {temporary_calculator = 1}
			add_to_temp_variable = {temporary_calculator = modifier@production_efficiency_cap_multiplier}
			multiply_variable = {capped_production_efficiency_amount = temporary_calculator}
		}
		clamp_variable = {
			var = production_efficiency@var:current_item_we_are_looking_at
			max = capped_production_efficiency_amount?1
		}
	}
}
work_out_total_factory_price = {

	add_to_temp_variable = {modifier_of_this_items_cost = 1}

	set_variable = {cost_amount@var:current_item_we_are_looking_at = global.CONSTANT_CORPORATE_FACTORY_COST}
	multiply_variable = {cost_amount@var:current_item_we_are_looking_at = factories_on_item@var:current_item_we_are_looking_at}

	multiply_variable = {cost_amount@var:current_item_we_are_looking_at = modifier_of_this_items_cost}

	set_temp_variable = {working_out_price = cost_amount@var:current_item_we_are_looking_at}
	divide_temp_variable = {working_out_price = 30}
	add_to_variable = {total_corporate_factory_cost = working_out_price}

}

example_subsidy_show_and_tell = {
	set_temp_variable = {company_tag = KUA}
	set_temp_variable = {modifier_percentage = -0.2} ## Decreases price by 20%
	add_subsidy_for_buying_equipment = yes ## WILL HANDLE THE LOCALISATION FOR YOU
}


add_subsidy_for_buying_equipment = { ## WILL RETURN LOCALISATION FOR YOU
	### REQUIRES TWO VARIABLES ASSIGNED BY MODDER
	## company_tag COMPANY THAT YOU WANT TO BUY THE EQUIPMENT OFF CHEAPER (Tag format i.e. ROT)
	## modifier_percentage WHAT MODIFIER (Percentage amount i.e. -0.2 is 20% off the total price)
	custom_effect_tooltip =  add_subsidy_tooltip
	if = {
		limit = {
			NOT = {
				has_variable = company_modifier@var:company_tag
			}
		}
		set_variable = {company_modifier@var:company_tag = 1}
	}
	add_to_variable = {company_modifier@var:company_tag = modifier_percentage}
}

test_effect_2 = {
	set_variable = {ztest_variable = 100}
	add_to_array = {
		array = ztesticle_array@55
		value = ztest_variable
	}
	# add_to_array = {
	# 	array = ztesticle_array@var:test_variable
	# 	value = 10
	# }
	log = "[?ztesticle_array@var:test_variable^0]"
	log = "[?ztesticle_array@var:test_variable^1]"
	log = "[?ztesticle_array@var:test_variable^2]"
	log = "[?ztesticle_array@var:test_variable^3]"
}
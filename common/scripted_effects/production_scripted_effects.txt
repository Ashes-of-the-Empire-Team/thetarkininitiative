search_for_items_with_no_production = {
	for_each_loop = {
		array = Production_array@var:temp_market_category
		value = current_item_we_are_looking_at
		if = {
			limit = {
				check_variable = {factories_on_item@var:current_item_we_are_looking_at < 1}
				set_temp_variable = {needed_tech = global.required_researched_technology@var:current_item_we_are_looking_at?token:post_endor_survival}
				meta_trigger = {
					text = {
						has_tech = [TECH_HELD]
					}
					TECH_HELD = "[?needed_tech.GetTokenKey]"
				}
			}
			add_to_temp_array = {
				array = factories_with_no_current_production
				value = current_item_we_are_looking_at
			}
			## add factory
		}else_if = {
			limit = {
				check_variable = {factories_on_item@var:current_item_we_are_looking_at > 1}
			}
			if = {
				limit = {
					check_variable = {quartely_revenue@var:current_item_we_are_looking_at > quartely_cost@var:current_item_we_are_looking_at}
					check_variable = {temp_free_corporate_factories < 1}
				}
				## compare quartley income to next worst quartely income
				set_temp_variable = {temp_quartely_profit = quartely_revenue@var:current_item_we_are_looking_at}
				subtract_from_temp_variable = {temp_quartely_profit = quartely_cost@var:current_item_we_are_looking_at}
				if = {
					limit = {
						check_variable = {temp_quartely_profit < lowest_profit_in_list}
					}
					set_temp_variable = {lowest_profit_in_list = temp_quartely_profit}
					set_temp_variable = {worst_performing_item = current_item_we_are_looking_at}
				}
			}
		}
	}
	if = {
		limit = {
			check_variable = {factories_with_no_current_production^num > 0}
		}
		for_each_loop = {
			array = factories_with_no_current_production
			value = current_item_we_are_looking_at
			if = {
				limit = {
					check_variable = {temp_free_corporate_factories > 0}
				}

				subtract_from_temp_variable = {temp_free_corporate_factories = 1}
				add_to_variable = {factories_on_item@var:current_item_we_are_looking_at = 1}
				set_temp_variable = {production_efficency_loss_percentage = 1}
				divide_temp_variable = {production_efficency_loss_percentage = factories_on_item@var:current_item_we_are_looking_at}
				set_temp_variable = {production_efficency_loss_actual = 1}
				subtract_from_temp_variable = { production_efficency_loss_actual = production_efficency_loss_percentage}
				multiply_variable = {production_efficiency@var:item_id = production_efficency_loss_actual}


			}else_if = {
				limit = {
					check_variable = {factories_on_item@var:worst_performing_item > 1}
				}
				add_to_variable = {factories_on_item@var:current_item_we_are_looking_at = 1}
				set_temp_variable = {production_efficency_loss_percentage = 1}
				divide_temp_variable = {production_efficency_loss_percentage = factories_on_item@var:current_item_we_are_looking_at}
				set_temp_variable = {production_efficency_loss_actual = 1}
				subtract_from_temp_variable = { production_efficency_loss_actual = production_efficency_loss_percentage}
				multiply_variable = {production_efficiency@var:item_id = production_efficency_loss_actual}

				add_to_variable = {factories_on_item@var:worst_performing_item = -1}
			}
		}
	}

	clear_temp_array = factories_with_no_current_production
	set_temp_variable = {lowest_profit_in_list = 0}
	set_temp_variable = {worst_performing_item = 0}
}

## IGNORE KEPT INCASE
	# #TANK
	# for_each_loop = {
	# 	array = Production_array@var:global.tank_market_category
	# 	value = current_item_we_are_looking_at
	# 	if = {
	# 		limit = {
	# 			check_variable = {factories_on_item@var:current_item_we_are_looking_at < 1}
	# 			set_temp_variable = {needed_tech = global.required_researched_technology@var:current_item_we_are_looking_at?token:post_endor_survival}
	# 			meta_trigger = {
	# 				text = {
	# 					has_tech = [TECH_HELD]
	# 				}
	# 				TECH_HELD = "[?needed_tech.GetTokenKey]"
	# 			}
	# 		}
	# 		add_to_temp_array = {
	# 			array = factories_with_no_current_production
	# 			value = current_item_we_are_looking_at
	# 		}
	# 		## add factory
	# 	}else_if = {
	# 		limit = {
	# 			check_variable = {factories_on_item@var:current_item_we_are_looking_at > 1}
	# 		}
	# 		if = {
	# 			limit = {
	# 				check_variable = {quartely_revenue@var:current_item_we_are_looking_at > quartely_cost@var:current_item_we_are_looking_at}
	# 				check_variable = {free_land_corporate_shipyards < 1}
	# 			}
	# 			## compare quartley income to next worst quartely income
	# 			set_temp_variable = {temp_quartely_profit = quartely_revenue@var:current_item_we_are_looking_at}
	# 			subtract_from_temp_variable = {temp_quartely_profit = quartely_cost@var:current_item_we_are_looking_at}
	# 			if = {
	# 				limit = {
	# 					check_variable = {temp_quartely_profit < lowest_profit_in_list}
	# 				}
	# 				set_temp_variable = {lowest_profit_in_list = temp_quartely_profit}
	# 				set_temp_variable = {worst_performing_item = current_item_we_are_looking_at}
	# 			}
	# 		}
	# 	}
	# }
	# if = {
	# 	limit = {
	# 		check_variable = {factories_with_no_current_production^num > 0}
	# 	}
	# 	for_each_loop = {
	# 		array = factories_with_no_current_production
	# 		value = current_item_we_are_looking_at

	# 		if = {
	# 			limit = {
	# 				check_variable = {factories_on_item@var:worst_performing_item > 1}
	# 			}
	# 			add_to_variable = {factories_on_item@var:current_item_we_are_looking_at = 1}
	# 			set_temp_variable = {production_efficency_loss_percentage = 1}
	# 			divide_temp_variable = {production_efficency_loss_percentage = factories_on_item@var:current_item_we_are_looking_at}
	# 			set_temp_variable = {production_efficency_loss_actual = 1}
	# 			subtract_from_temp_variable = { production_efficency_loss_actual = production_efficency_loss_percentage}
	# 			multiply_variable = {production_efficiency@var:item_id = production_efficency_loss_actual}

	# 			add_to_variable = {factories_on_item@var:worst_performing_item = -1}
	# 		}
	# 	}
	# }

	# clear_temp_array = factories_with_no_current_production
	# set_temp_variable = {lowest_profit_in_list = 0}
	# set_temp_variable = {worst_performing_item = 0}
	# #land
	# for_each_loop = {
	# 	array = Production_array@var:global.land_market_category
	# 	value = current_item_we_are_looking_at
	# 	if = {
	# 		limit = {
	# 			check_variable = {factories_on_item@var:current_item_we_are_looking_at < 1}
	# 			set_temp_variable = {needed_tech = global.required_researched_technology@var:current_item_we_are_looking_at?token:post_endor_survival}
	# 			meta_trigger = {
	# 				text = {
	# 					has_tech = [TECH_HELD]
	# 				}
	# 				TECH_HELD = "[?needed_tech.GetTokenKey]"
	# 			}
	# 		}
	# 		log = "Item [?current_item_we_are_looking_at.GetTokenKey]"
	# 		add_to_temp_array = {
	# 			array = factories_with_no_current_production
	# 			value = current_item_we_are_looking_at
	# 		}
	# 		## add factory
	# 	}else_if = {
	# 		limit = {
	# 			check_variable = {factories_on_item@var:current_item_we_are_looking_at > 1}
	# 		}
	# 		if = {
	# 			limit = {
	# 				check_variable = {quartely_revenue@var:current_item_we_are_looking_at > quartely_cost@var:current_item_we_are_looking_at}
	# 				check_variable = {free_land_corporate_shipyards < 1}
	# 			}
	# 			## compare quartley income to next worst quartely income
	# 			set_temp_variable = {temp_quartely_profit = quartely_revenue@var:current_item_we_are_looking_at}
	# 			subtract_from_temp_variable = {temp_quartely_profit = quartely_cost@var:current_item_we_are_looking_at}
	# 			if = {
	# 				limit = {
	# 					check_variable = {temp_quartely_profit < lowest_profit_in_list}
	# 				}
	# 				set_temp_variable = {lowest_profit_in_list = temp_quartely_profit}
	# 				set_temp_variable = {worst_performing_item = current_item_we_are_looking_at}
	# 			}
	# 		}
	# 	}
	# }
	# if = {
	# 	limit = {
	# 		check_variable = {factories_with_no_current_production^num > 0}
	# 	}
	# 	for_each_loop = {
	# 		array = factories_with_no_current_production
	# 		value = current_item_we_are_looking_at

	# 		if = {
	# 			limit = {
	# 				check_variable = {factories_on_item@var:worst_performing_item > 1}
	# 			}
	# 			add_to_variable = {factories_on_item@var:current_item_we_are_looking_at = 1}
	# 			set_temp_variable = {production_efficency_loss_percentage = 1}
	# 			divide_temp_variable = {production_efficency_loss_percentage = factories_on_item@var:current_item_we_are_looking_at}
	# 			set_temp_variable = {production_efficency_loss_actual = 1}
	# 			subtract_from_temp_variable = { production_efficency_loss_actual = production_efficency_loss_percentage}
	# 			multiply_variable = {production_efficiency@var:item_id = production_efficency_loss_actual}

	# 			add_to_variable = {factories_on_item@var:worst_performing_item = -1}
	# 		}
	# 	}
	# }
sp_land_disruptor_rifles = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_weapon

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_tech = infantry_weapons_3
		}
	}

	breakthrough_cost = {
		specialization_land = 1
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_arc_pulse_generator = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_imperial

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_tech = at_st
			has_government = imperial
		}
	}

	breakthrough_cost = {
		specialization_land = 2
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_droid_manufacturing_expertise= {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_droid

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {

	}

	breakthrough_cost = {
		specialization_land = 2
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_hk_droid= {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_droid

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {

	}

	breakthrough_cost = {
		specialization_land = 2
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_520_battle_platform = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_rebel

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_government = democratic
		}
	}

	breakthrough_cost = {
		specialization_land = 3
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_yvh1 = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_rebel

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_government = democratic
		}
	}

	breakthrough_cost = {
		specialization_land = 3
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_dark_troopers = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_imperial

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_tech = infantry_weapons_3
			has_government = imperial
		}
	}

	breakthrough_cost = {
		specialization_land = 1
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_stronghold_network = {
	specialization = specialization_land

	project_tags = sp_tag_artillery

	allowed = {
		has_dlc = "Gotterdammerung"
	}
	
	available = {
		FROM = {
			has_tech = basic_fortification_tech
		}
	}
	
	prototype_time = sp_time.prototype.medium

	complexity = sp_complexity.large

	breakthrough_cost = {
		specialization_land = 2
	}

	resource_cost = {
		resources = { 
			steel = 4
			chromium = 2
			tungsten = 1
		}
	}
	
	project_output = {
		country_effects = {
			custom_override_tooltip = {
				tooltip = {
					localization_key = SP_UNLOCK_BUILDING_ICON_DESC
					BUILDING = stronghold_network
					BUILDING_DESCRIPTION = stronghold_network_desc
					ICON_FRAME = 23
				}
				set_technology = {
					stronghold_network_tech = 1
					popup = no
				}
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_critical_failure
	}

	unique_prototype_rewards = {
		sp_land_reward_stronghold_network_structural_weakness_discovered = {
			fire_only_once = yes

			threshold = { 
				min = 20
				max = 70
			}

			weight = {
				base = 1
				modifier = {
					factor = 0
					has_project_flag = sp_land_stronghold_network_structural_weakness_discovered_flag #Used in other unique rewards to prevent multiple structural failures
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_structural_weakness_discovered
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.medium
							set_project_flag = sp_land_stronghold_network_structural_weakness_discovered_flag #Used in other unique rewards to prevent multiple structural failures
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_delayed_by_concrete_shortage = {
			fire_only_once = yes

			threshold = { 
				min = 0
				max = 90
			}

			weight = {
				base = 1
			}

			option = {
				token = sp_land_reward_option_stronghold_network_delayed_by_concrete_shortage
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.low
						}
					}

					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.low
							specialization = specialization_land
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_underground_rail_systems = {
			fire_only_once = yes

			threshold = { 
				min = 30
				max = 100
			}

			weight = {
				base = 2
			}

			option = {
				token = sp_land_reward_option_stronghold_network_delayed_by_concrete_shortage
				
				iteration_output = {
					country_effects = {
						add_tech_bonus = {
							name = sp_land_reward_stronghold_network_underground_rail_systems
							bonus = 0.1
							uses = 1
							category = cat_fortification
							category = engineers_tech
						}

						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_integration_of_anti_blast_doors = {
			fire_only_once = yes

			threshold = { 
				min = 30
				max = 100
			}

			weight = {
				base = 2
			}

			option = {
				token = sp_land_reward_option_stronghold_network_integration_of_anti_blast_doors
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_communication_system_overhaul = {
			fire_only_once = yes

			threshold = { 
				min = 50
				max = 100
			}

			weight = {
				base = 5
			}

			option = {
				token = sp_land_reward_option_stronghold_network_communication_system_overhaul_standardize
				
				iteration_output = {
					country_effects = {
						add_tech_bonus = {
							name = sp_land_reward_stronghold_network_communication_system_overhaul
							bonus = 0.25
							uses = 1
							category = cat_fortification
							category = construction_tech
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_communication_system_overhaul_further_study
				
				iteration_output = {
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.medium
							specialization = specialization_land
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_leadership_approach = {
			fire_only_once = yes

			threshold = { 
				min = 0
				max = 100
			}

			force_reward_if_available = yes
			weight = {
				base = 100 #Weight is still checked when more than 1 reward are supposed to be forced at the same time
			}

			option = {
				token = sp_land_reward_option_stronghold_network_leadership_approach_oversee_work_personally
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
							set_project_flag = sp_land_reward_stronghold_network_leadership_approach_field_flag #Unlocks possible specific rewards
						}
					}

					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.low
							specialization = specialization_land
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_leadership_approach_office_planning
				
				iteration_output = {
					country_effects = {
						add_breakthrough_progress = {
							specialization = specialization_land
							value = sp_breakthrough_progress.low
						}

						FROM = {
							set_project_flag = sp_land_reward_stronghold_network_leadership_approach_office_flag #Unlocks possible specific rewards
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_breakthrough_in_concrete_reinforcement_01 = { #Scientist working from Office
			fire_only_once = yes

			threshold = { 
				min = 50
				max = 100
			}

			weight = {
				base = 0
				modifier = {
					add = 15
					has_project_flag = sp_land_reward_stronghold_network_leadership_approach_field_flag
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_breakthrough_in_concrete_reinforcement_01_apply_and_document_discovery
				
				iteration_output = {
					country_effects = {
						add_tech_bonus = {
							name = sp_land_reward_stronghold_network_breakthrough_in_concrete_reinforcement_01
							bonus = 0.5
							uses = 1
							category = cat_fortification
							category = construction_tech
						}

						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_breakthrough_in_concrete_reinforcement_01_use_in_current_project
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.medium
						}
					}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.low
							specialization = specialization_land
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_breakthrough_in_concrete_reinforcement_02 = { #Scientist working from Office
			fire_only_once = yes

			threshold = { 
				min = 50
				max = 100
			}

			weight = {
				base = 0
				modifier = {
					add = 15
					has_project_flag = sp_land_reward_stronghold_network_leadership_approach_office_flag
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_breakthrough_in_concrete_reinforcement_01_apply_and_document_discovery #Intentional 01
				
				iteration_output = {
					country_effects = {
						add_tech_bonus = {
							name = sp_land_reward_stronghold_network_breakthrough_in_concrete_reinforcement_01 #Intentional 01
							bonus = 0.75
							uses = 1
							category = cat_fortification
							category = construction_tech
						}

						if = {
							limit = {
								any_scientist = {
									has_scientist_level = {
										level > 0
										specialization = specialization_land
									}
									is_active_scientist = no
								}
							}
							random_scientist = {
								limit = {
									has_scientist_level = {
										level > 0
										specialization = specialization_land
									}
									is_active_scientist = no
								}
								add_scientist_xp = {
									experience = constant:sp_scientist_xp_gain.high
									specialization = specialization_land
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_breakthrough_in_concrete_reinforcement_01_use_in_current_project #Intentional 01
				
				iteration_output = {
					country_effects = {
						if = {
							limit = {
								any_scientist = {
									has_scientist_level = {
										level > 0
										specialization = specialization_land
									}
									is_active_scientist = no
								}
							}
							random_scientist = {
								limit = {
									has_scientist_level = {
										level > 0
										specialization = specialization_land
									}
									is_active_scientist = no
								}
								add_scientist_xp = {
									experience = constant:sp_scientist_xp_gain.medium
									specialization = specialization_land
								}
							}
						}

						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
						}
					}
				}
			}
		}

		sp_land_reward_option_stronghold_network_collapse_01 = { #Scientist working from Office
			fire_only_once = yes

			threshold = { 
				min = 60
				max = 100
			}

			weight = {
				base = 0
				modifier = {
					add = 10
					has_project_flag = sp_land_reward_stronghold_network_leadership_approach_field_flag
				}
				modifier = {
					factor = 0
					has_project_flag = sp_land_stronghold_network_structural_weakness_discovered_flag #Used in other unique rewards to prevent multiple structural failures
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_prioritize_scientist
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.high
						}
					}
					scientist_effects = {
						injure_scientist_for_days = 30
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_prioritize_safety
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.medium
						}
					}
					scientist_effects = {
						injure_scientist_for_days = 60
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_continue_without_delay
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.low
						}
					}
					scientist_effects = {
						injure_scientist_for_days = 60
					}
					facility_state_effects = {
						add_dynamic_modifier = {
							modifier = sp_land_stronghold_network_collapse_workers_drafted
							days = 60
						}
					}
				}
			}
		}

		sp_land_reward_option_stronghold_network_collapse_02 = { #Scientist working from Office
			fire_only_once = yes

			threshold = { 
				min = 60
				max = 100
			}

			weight = {
				base = 0
				modifier = {
					add = 10
					has_project_flag = sp_land_reward_stronghold_network_leadership_approach_office_flag
				}
				modifier = {
					factor = 0
					has_project_flag = sp_land_stronghold_network_structural_weakness_discovered_flag #Used in other unique rewards to prevent multiple structural failures
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_prioritize_safety #Intentional 01
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.medium
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_continue_without_delay #Intentional 01
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.low
						}
					}
					facility_state_effects = {
						add_dynamic_modifier = {
							modifier = sp_land_stronghold_network_collapse_workers_drafted
							days = 60
						}
					}
				}
			}
		}
	}
}


sp_land_disruptor_rifles = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_weapon

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_tech = infantry_weapons_3
		}
	}

	breakthrough_cost = {
		specialization_land = 1
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_arc_pulse_generator = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_imperial

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_tech = at_st
			has_government = imperial
		}
	}

	breakthrough_cost = {
		specialization_land = 2
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_droid_manufacturing_expertise= {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_droid

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {

	}

	breakthrough_cost = {
		specialization_land = 2
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_hk_droid= {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_droid

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {

	}

	breakthrough_cost = {
		specialization_land = 2
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_520_battle_platform = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_rebel

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_government = democratic
		}
	}

	breakthrough_cost = {
		specialization_land = 3
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_yvh1 = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_rebel

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_government = democratic
		}
	}

	breakthrough_cost = {
		specialization_land = 3
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_dark_troopers = {
	specialization = specialization_land
	#icon = GFX_sp_land_flamethrower_tank ### Automatically hooked-in since the GFX ID matches the project ID.

	project_tags = sp_tag_imperial

	ai_will_do = {
		base = 1
	}

	allowed = {
	}
	
	available = {
		FROM = {
			has_tech = infantry_weapons_3
			has_government = imperial
		}
	}

	breakthrough_cost = {
		specialization_land = 1
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.small
	
	project_output = {
		country_effects = {
			enable_equipments = {
				disruptor_rifle
			}	
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_armored_advanced_flamethrower_tech	
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_resource_scarcity
	}
}
sp_land_stronghold_network = {
	specialization = specialization_land

	project_tags = sp_tag_artillery

	allowed = {
		has_dlc = "Gotterdammerung"
	}
	
	available = {
		FROM = {
			has_tech = basic_fortification_tech
		}
	}
	
	prototype_time = sp_time.prototype.medium

	complexity = sp_complexity.large

	breakthrough_cost = {
		specialization_land = 2
	}

	resource_cost = {
		resources = { 
			steel = 4
			chromium = 2
			tungsten = 1
		}
	}
	
	project_output = {
		country_effects = {
			custom_override_tooltip = {
				tooltip = {
					localization_key = SP_UNLOCK_BUILDING_ICON_DESC
					BUILDING = stronghold_network
					BUILDING_DESCRIPTION = stronghold_network_desc
					ICON_FRAME = 23
				}
				set_technology = {
					stronghold_network_tech = 1
					popup = no
				}
			}
		}
	}

	generic_prototype_rewards = {
		sp_land_generic_reward_scientist_xp_1
		sp_land_generic_reward_scientist_xp_2
		sp_land_generic_reward_scientist_xp_3
		sp_land_generic_reward_army_xp_1
		sp_land_generic_reward_army_xp_2
		sp_land_generic_reward_army_xp_3
		sp_land_generic_reward_major_progress_1
		sp_land_generic_reward_major_progress_2
		sp_land_generic_reward_major_progress_3
		sp_land_generic_reward_test_failure_1
		sp_land_generic_reward_test_failure_2
		sp_land_generic_reward_test_failure_3
		sp_land_generic_reward_critical_failure
	}

	unique_prototype_rewards = {
		sp_land_reward_stronghold_network_structural_weakness_discovered = {
			fire_only_once = yes

			threshold = { 
				min = 20
				max = 70
			}

			weight = {
				base = 1
				modifier = {
					factor = 0
					has_project_flag = sp_land_stronghold_network_structural_weakness_discovered_flag #Used in other unique rewards to prevent multiple structural failures
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_structural_weakness_discovered
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.medium
							set_project_flag = sp_land_stronghold_network_structural_weakness_discovered_flag #Used in other unique rewards to prevent multiple structural failures
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_delayed_by_concrete_shortage = {
			fire_only_once = yes

			threshold = { 
				min = 0
				max = 90
			}

			weight = {
				base = 1
			}

			option = {
				token = sp_land_reward_option_stronghold_network_delayed_by_concrete_shortage
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.low
						}
					}

					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.low
							specialization = specialization_land
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_underground_rail_systems = {
			fire_only_once = yes

			threshold = { 
				min = 30
				max = 100
			}

			weight = {
				base = 2
			}

			option = {
				token = sp_land_reward_option_stronghold_network_delayed_by_concrete_shortage
				
				iteration_output = {
					country_effects = {
						add_tech_bonus = {
							name = sp_land_reward_stronghold_network_underground_rail_systems
							bonus = 0.1
							uses = 1
							category = cat_fortification
							category = engineers_tech
						}

						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_integration_of_anti_blast_doors = {
			fire_only_once = yes

			threshold = { 
				min = 30
				max = 100
			}

			weight = {
				base = 2
			}

			option = {
				token = sp_land_reward_option_stronghold_network_integration_of_anti_blast_doors
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_communication_system_overhaul = {
			fire_only_once = yes

			threshold = { 
				min = 50
				max = 100
			}

			weight = {
				base = 5
			}

			option = {
				token = sp_land_reward_option_stronghold_network_communication_system_overhaul_standardize
				
				iteration_output = {
					country_effects = {
						add_tech_bonus = {
							name = sp_land_reward_stronghold_network_communication_system_overhaul
							bonus = 0.25
							uses = 1
							category = cat_fortification
							category = construction_tech
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_communication_system_overhaul_further_study
				
				iteration_output = {
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.medium
							specialization = specialization_land
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_leadership_approach = {
			fire_only_once = yes

			threshold = { 
				min = 0
				max = 100
			}

			force_reward_if_available = yes
			weight = {
				base = 100 #Weight is still checked when more than 1 reward are supposed to be forced at the same time
			}

			option = {
				token = sp_land_reward_option_stronghold_network_leadership_approach_oversee_work_personally
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
							set_project_flag = sp_land_reward_stronghold_network_leadership_approach_field_flag #Unlocks possible specific rewards
						}
					}

					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.low
							specialization = specialization_land
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_leadership_approach_office_planning
				
				iteration_output = {
					country_effects = {
						add_breakthrough_progress = {
							specialization = specialization_land
							value = sp_breakthrough_progress.low
						}

						FROM = {
							set_project_flag = sp_land_reward_stronghold_network_leadership_approach_office_flag #Unlocks possible specific rewards
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_breakthrough_in_concrete_reinforcement_01 = { #Scientist working from Office
			fire_only_once = yes

			threshold = { 
				min = 50
				max = 100
			}

			weight = {
				base = 0
				modifier = {
					add = 15
					has_project_flag = sp_land_reward_stronghold_network_leadership_approach_field_flag
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_breakthrough_in_concrete_reinforcement_01_apply_and_document_discovery
				
				iteration_output = {
					country_effects = {
						add_tech_bonus = {
							name = sp_land_reward_stronghold_network_breakthrough_in_concrete_reinforcement_01
							bonus = 0.5
							uses = 1
							category = cat_fortification
							category = construction_tech
						}

						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_breakthrough_in_concrete_reinforcement_01_use_in_current_project
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.medium
						}
					}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.low
							specialization = specialization_land
						}
					}
				}
			}
		}

		sp_land_reward_stronghold_network_breakthrough_in_concrete_reinforcement_02 = { #Scientist working from Office
			fire_only_once = yes

			threshold = { 
				min = 50
				max = 100
			}

			weight = {
				base = 0
				modifier = {
					add = 15
					has_project_flag = sp_land_reward_stronghold_network_leadership_approach_office_flag
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_breakthrough_in_concrete_reinforcement_01_apply_and_document_discovery #Intentional 01
				
				iteration_output = {
					country_effects = {
						add_tech_bonus = {
							name = sp_land_reward_stronghold_network_breakthrough_in_concrete_reinforcement_01 #Intentional 01
							bonus = 0.75
							uses = 1
							category = cat_fortification
							category = construction_tech
						}

						if = {
							limit = {
								any_scientist = {
									has_scientist_level = {
										level > 0
										specialization = specialization_land
									}
									is_active_scientist = no
								}
							}
							random_scientist = {
								limit = {
									has_scientist_level = {
										level > 0
										specialization = specialization_land
									}
									is_active_scientist = no
								}
								add_scientist_xp = {
									experience = constant:sp_scientist_xp_gain.high
									specialization = specialization_land
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_breakthrough_in_concrete_reinforcement_01_use_in_current_project #Intentional 01
				
				iteration_output = {
					country_effects = {
						if = {
							limit = {
								any_scientist = {
									has_scientist_level = {
										level > 0
										specialization = specialization_land
									}
									is_active_scientist = no
								}
							}
							random_scientist = {
								limit = {
									has_scientist_level = {
										level > 0
										specialization = specialization_land
									}
									is_active_scientist = no
								}
								add_scientist_xp = {
									experience = constant:sp_scientist_xp_gain.medium
									specialization = specialization_land
								}
							}
						}

						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
						}
					}
				}
			}
		}

		sp_land_reward_option_stronghold_network_collapse_01 = { #Scientist working from Office
			fire_only_once = yes

			threshold = { 
				min = 60
				max = 100
			}

			weight = {
				base = 0
				modifier = {
					add = 10
					has_project_flag = sp_land_reward_stronghold_network_leadership_approach_field_flag
				}
				modifier = {
					factor = 0
					has_project_flag = sp_land_stronghold_network_structural_weakness_discovered_flag #Used in other unique rewards to prevent multiple structural failures
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_prioritize_scientist
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.high
						}
					}
					scientist_effects = {
						injure_scientist_for_days = 30
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_prioritize_safety
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.medium
						}
					}
					scientist_effects = {
						injure_scientist_for_days = 60
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_continue_without_delay
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.low
						}
					}
					scientist_effects = {
						injure_scientist_for_days = 60
					}
					facility_state_effects = {
						add_dynamic_modifier = {
							modifier = sp_land_stronghold_network_collapse_workers_drafted
							days = 60
						}
					}
				}
			}
		}

		sp_land_reward_option_stronghold_network_collapse_02 = { #Scientist working from Office
			fire_only_once = yes

			threshold = { 
				min = 60
				max = 100
			}

			weight = {
				base = 0
				modifier = {
					add = 10
					has_project_flag = sp_land_reward_stronghold_network_leadership_approach_office_flag
				}
				modifier = {
					factor = 0
					has_project_flag = sp_land_stronghold_network_structural_weakness_discovered_flag #Used in other unique rewards to prevent multiple structural failures
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_prioritize_safety #Intentional 01
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.medium
						}
					}
				}
			}

			option = {
				token = sp_land_reward_option_stronghold_network_collapse_01_continue_without_delay #Intentional 01
				
				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.loss.low
						}
					}
					facility_state_effects = {
						add_dynamic_modifier = {
							modifier = sp_land_stronghold_network_collapse_workers_drafted
							days = 60
						}
					}
				}
			}
		}
	}
	sp_land_multi_charge_large_caliber_gun = {
		specialization = specialization_land
	
		project_tags = sp_tag_artillery
	
		allowed = {
			has_dlc = "Gotterdammerung"
		}
	
		special_project_parent = {
			sp_land_super_heavy_howitzer
		}
			
		prototype_time = sp_time.prototype.medium
	
		complexity = sp_complexity.small
	
		breakthrough_cost = {
			specialization_land = 1
		}
	
		resource_cost = {
			resources = { 
				steel = 6
				tungsten = 4
				chromium = 2
			}
		}
		
		project_output = {
			country_effects = {
				custom_override_tooltip = {
					tooltip = {
						localization_key = SP_UNLOCK_BUILDING_ICON_DESC
						BUILDING = mega_gun_emplacement
						BUILDING_DESCRIPTION = mega_gun_emplacement_desc
						ICON_FRAME = 24
					}
					#hidden_effect = { #TODO_Manu: Uncomment this if we get code support for implementing small scale of V-3
					#	if = {
					#		limit = {
					#			FROM = { has_project_flag = multi_charge_large_caliber_gun_small_size_flag }
					#		}
					#		add_equipment_bonus = {
					#			bonus = {
					#				explosive_ammo_equipment_1 = {
					#					air_range = -0.25
					#					air_bombing = -0.35
					#				}
					#			}
					#		}
					#		add_ideas = sp_multi_charge_large_caliber_gun_small_size_ns
					#	}
					#}
					set_technology = {
						land_multi_charge_large_caliber_gun_tech = 1
						popup = no
					}
				}
			}
		}
	
		generic_prototype_rewards = {
			sp_land_generic_reward_scientist_xp_1
			sp_land_generic_reward_scientist_xp_2
			sp_land_generic_reward_scientist_xp_3
			sp_land_generic_reward_army_xp_1
			sp_land_generic_reward_army_xp_2
			sp_land_generic_reward_army_xp_3
			sp_land_generic_reward_major_progress_1
			sp_land_generic_reward_major_progress_2
			sp_land_generic_reward_major_progress_3
			sp_land_generic_reward_test_failure_1
			sp_land_generic_reward_test_failure_2
			sp_land_generic_reward_test_failure_3
			sp_land_generic_reward_artillery_tech_1
			sp_land_generic_reward_artillery_tech_2
			sp_land_generic_reward_artillery_tech_3
			sp_land_generic_reward_artillery_bonus_1
			sp_land_generic_reward_artillery_bonus_2
			sp_land_generic_reward_artillery_bonus_3
			sp_land_generic_reward_resource_scarcity
		}
	
		unique_prototype_rewards = {
	
			sp_land_reward_multi_charge_large_caliber_gun_successful_test_firing = {
				fire_only_once = yes
	
				threshold = { 
					min = 0
					max = 70
				}
	
				weight = {
					base = 5
				}
	
				option = {
					token = sp_land_reward_option_multi_charge_large_caliber_gun_successful_test_firing
					
					iteration_output = {
						country_effects = {
							FROM = { add_project_progress_ratio = constant:sp_progress.gain.medium }
						}
	
						scientist_effects = {
							if = {
								limit = {
									has_scientist_level = {
										level < 5
										specialization = specialization_land
									}
								}
								add_scientist_xp = {
									experience = constant:sp_scientist_xp_gain.low
									specialization = specialization_land
								}
							}
						}
					}
				}
			}
	
			sp_land_reward_multi_charge_large_caliber_gun_test_failure = {
				fire_only_once = yes
	
				threshold = { 
					min = 0
					max = 70
				}
	
				weight = {
					base = 1
				}
	
				option = {
					token = sp_land_reward_option_multi_charge_large_caliber_gun_test_failure
					
					iteration_output = {
						facility_state_effects = {
							damage_building = {
								tags = facility
								damage = 0.25
								province = var:facility_province_id
							}
							damage_building = {
								type = infrastructure 
								damage = 0.15
							}
						}
	
						country_effects = {
							FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
						}
	
						scientist_effects = {
							if = {
								limit = {
									has_scientist_level = {
										level < 5
										specialization = specialization_land
									}
								}
								add_scientist_xp = {
									experience = constant:sp_scientist_xp_gain.low
									specialization = specialization_land
								}
								injure_scientist_for_days = 60
							}
						}
					}
				}
			}
	
			sp_land_reward_multi_charge_large_caliber_gun_breakthrough_in_propulsion_technology = {
				fire_only_once = yes
	
				threshold = { 
					min = 60
					max = 100
				}
	
				weight = {
					base = 2
				}
	
				option = {
					token = sp_land_reward_option_multi_charge_large_caliber_gun_breakthrough_in_propulsion_technology
					
					iteration_output = {
						country_effects = {
							FROM = { add_project_progress_ratio = constant:sp_progress.gain.high }
	
							add_breakthrough_progress = {
								specialization = specialization_land
								value = sp_breakthrough_progress.low
							}
						}
	
						scientist_effects = {
							if = {
								limit = {
									NOT = { has_trait = scientist_trait_fast_learner }
								}
								random_list = {
									70 = {
										#No effect
									}
									30 = {
										add_scientist_trait = scientist_trait_fast_learner
									}
								}
							}
							else_if = {
								limit = {
									NOT = { has_trait = scientist_trait_bright }
								}
								random_list = {
									80 = {
										#No effect
									}
									20 = {
										add_scientist_trait = scientist_trait_bright
									}
								}
							}
						}
					}
				}
			}
		}
	}
}


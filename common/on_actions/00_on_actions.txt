#TODO
#on_actions = {
#	# country
#
#	# Ace pilots
#	# country, FROM = ace
#	on_ace_promoted = {
#		random_events = {
#			100 = ace_promoted.1
#			5 = ace_promoted.2
#		}
#	}
#
#	# country, FROM = ace, PREV = enemy ace
#	# This event fires twice, once for each ace.
#	on_aces_killed_each_other = {
#		random_events = {
#			100 = aces_killed_each_other.1
#		}
#	}
#
#	# country, FROM = our ace,
#	# PREV = enemy ace, has killed FROM
#	on_ace_killed_by_ace = {
#		random_events = {
#			100 = ace_killed_by_ace.1
#		}
#	}
#
#	# country, FROM = our ace,
#	# PREV = enemy ace, killed by FROM
#	on_ace_killed_other_ace = {
#		random_events = {
#			100 = ace_killed_other_ace.1
#		}
#	}
#
#	# our ace is killed by no name
#	# country, FROM = ace
#	on_ace_killed = {
#		random_events = {
#			100 = ace_died.1
#		}
#	}
#
#	# our ace died in accident
#	# country, FROM = ace
#	on_ace_killed_on_accident = {
#
#	}
#
#	# enemy ace is killed by our non name
#	# country, FROM = enemy ace
#	on_non_ace_killed_other_ace = {
#
#	}
#
#	# During justifying wargoals
#	# triggered daily, so make sure there is a sink somewhere not firing events
#	# country, FROM = target nation
#	on_justifying_wargoal_pulse = {
#
#		random_events = {
#			100 = war_justification.1
#			100 = war_justification.2
#			100 = war_justification.3
#			100 = war_justification.4
#			100 = war_justification.5
#			100 = war_justification.6
#			100 = war_justification.7
#			100 = war_justification.8
#			100 = war_justification.9
#			100 = war_justification.10
#			100 = war_justification.11
#			100 = war_justification.12
#			100 = war_justification.13
#			100 = war_justification.14
#			100 = war_justification.15
#			100 = war_justification.16
#			100 = war_justification.17
#			100 = war_justification.18
#			100 = war_justification.19
#			17000 = 0
#		}
#	}
#
#	on_wargoal_expire = {
#		random_events = {
#			100 = war_justification.301
#		}
#	}
#
#	on_nuke_drop = {
#
#		effect = {
#			set_global_flag = first_nuke_dropped
#			if = {
#				limit = { NOT = { has_global_flag = first_nuke_dropped } }
#				country_event = { id = generic.8 }
#			}
#			if = {
#				limit = { has_idea = race_for_the_bomb_outclassed }
#				remove_ideas = race_for_the_bomb_outclassed
#			}
#			if = {
#				limit = { NOT = { has_country_flag = achievement_has_dropped_nuke } }
#				goto_state = FROM
#				set_country_flag = achievement_has_dropped_nuke
#			}
#			if = {
#				limit = {
#					FROM = { state = 378 }
#				}
#				set_country_flag = achievement_has_nuked_california
#			}
#
#			news_event = { id = nuke_dropped.2 days = 1}
#			news_event = { id = nuke_dropped.3 days = 1}
#			news_event = { id = nuke_dropped.4 days = 1}
#			news_event = { id = nuke_dropped.5 days = 1}
#			news_event = { id = nuke_dropped.6 days = 1}
#			news_event = { id = nuke_dropped.7 days = 1}
#			news_event = { id = nuke_dropped.8 days = 1}
#			news_event = { id = nuke_dropped.9 days = 1}
#			news_event = { id = nuke_dropped.10 days = 1}
#			news_event = { id = nuke_dropped.11 days = 1}
#			news_event = { id = nuke_dropped.12 days = 1}
#			news_event = { id = nuke_dropped.13 days = 1}
#		}
#		random_events = {
#			100 = nuke_dropped.0
#		}
#	}
#
#	# country random events
#	#on_bi_yearly_pulse = {
#	#
#	#}
#
#	#on_five_year_pulse = {
#	#
#	#}
#
#	on_border_war_lost = {
#		effect = {
#			owner = {
#				country_event = { id = china.14 }
#				country_event = { id = china.16 }
#			}
#		}
#	}
#
#	on_leave_faction = {
#		effect = {
#			FROM = {
#				add_opinion_modifier = {
#					modifier = faction_traitor
#					target = ROOT
#					days = 365
#				}
#
#				add_opinion_modifier = {
#					modifier = faction_traitor_trade
#					target = ROOT
#					days = 365
#				}
#			}
#		}
#	}
#
#	#FROM is country getting invited.
#	on_offer_join_faction = {
#		effect = {
#			#Give achievement to nation joining a faction, but not in one from game start
#			if = {
#				limit = {
#					date > 1936.01.02
#				}
#				FROM = {
#					if = {
#						limit = {
#							is_faction_leader = no
#						}
#						set_country_flag = achievement_has_joined_faction
#					}
#				}
#			}
#		}
#	}
#
#	# When a new faction is formed
#	on_faction_formed = {
#		effect = {
#			news_event = { id = news.159 }
#		}
#	}
#
#	on_coup_succeeded = {
#		effect = {
#			#Turn elections on for democracies created from coup
#			random_other_country = {
#				limit = {
#					has_government = democratic
#					original_tag = ROOT
#				}
#				set_politics = {
#					ruling_party = democratic
#					elections_allowed = yes
#				}
#			}
#		}
#	}
#
#	#ROOT is winner #FROM gets annexed - This will also fire on_annex
#	on_civil_war_end = {
#		effect = {
#			if = {
#				limit = {
#					has_government = democratic
#				}
#				set_politics = {
#					ruling_party = democratic
#					elections_allowed = yes
#				}
#			}
#		}
#	}
#
#	#used when puppeting in a peace conference
#	#ROOT = nation being puppeted, FROM = overlord
#
#	on_puppet = {
#		effect = {
#			if = {
#				limit = {
#					NOT = { has_elections = yes }
#					has_government = democratic
#				}
#				set_politics = {
#					ruling_party = democratic
#					elections_allowed = yes
#				}
#			}
#		}
#	}
#
#	#used when puppeting through the occupied territories menu during peace time (or when releasing from non-core but owned territory, f.e. Britain releasing Egypt)
#	#ROOT = nation being released, FROM = overlord
#
#	on_release_as_puppet = {
#		effect = {
#			if = {
#				limit = {
#					NOT = { has_elections = yes }
#					has_government = democratic
#				}
#				set_politics = {
#					ruling_party = democratic
#					elections_allowed = yes
#				}
#			}
#		}
#	}
#	# From is owner country
#	on_army_leader_daily = {
#		effect = {
#			if = {
#				limit = {
#					check_variable = { random < 0.02 }
#					NOT = { has_trait = sick }
#					set_temp_variable = { temp = sum_unit_terrain_modifier@sickness_chance }
#					divide_temp_variable = { temp = num_units }
#					check_variable = { temp > 0.75 }
#					NOT = { has_unit_leader_flag = recently_sick }
#				}
#				add_timed_unit_leader_trait = {
#					trait = sick
#					days = 30
#				}
#				unit_leader_event = { id = generic.17 }
#			}
#		}
#	}
#
#	# From is owner country
#	on_army_leader_won_combat = {
#		effect = {
#			if = {
#				limit = {
#					set_temp_variable = { chance = 0.001 }
#					set_temp_variable = { factor = 1.0 }
#					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor }
#					multiply_temp_variable = { chance = factor }
#					check_variable = { random < chance }
#					NOT = { has_trait = wounded }
#				}
#				add_timed_unit_leader_trait = {
#					trait = wounded
#					days = 90
#				}
#				unit_leader_event = { id = generic.18 }
#			}
#		}
#	}
#
#	# From is owner country
#	on_army_leader_lost_combat = {
#		effect = {
#			if = {
#				limit = {
#					set_temp_variable = { chance = 0.005 }
#					set_temp_variable = { factor = 1.0 }
#					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor }
#					multiply_temp_variable = { chance = factor }
#					check_variable = { random < chance }
#					NOT = { has_trait = wounded }
#				}
#				add_timed_unit_leader_trait = {
#					trait = wounded
#					days = 90
#				}
#				unit_leader_event = { id = generic.18 }
#			}
#		}
#	}
#
#	on_army_leader_promoted = {
#		effect = {
#			add_timed_unit_leader_trait = {
#				trait = recently_promoted
#				days = 100
#			}
#		}
#	}
#
#	# root country that invades
#	# scope state that is invaded
#	# from scope state that the invasion started
#	# on_naval_invasion = {
#	# 	effect = {
#	# 	}
#	# }
#
#
#	# root country that paradrops
#	# scope state that is paradroped into
#	# from scope state that the paradrop started
#	on_paradrop = {
#	    effect = {
#		    set_country_flag = has_paradropped_flag
#		}
#	}
#	on_ruling_party_change = {
#		# temp var old_ideology_token is available for effects
#		effect = {
#			every_controlled_state = {
#				limit = {
#					has_resistance = yes
#				}
#				set_temp_variable = { new_compliance = compliance }
#				multiply_temp_variable = { new_compliance = 0.5 }
#				set_compliance = new_compliance
#			}
#		}
#	}
#
#	on_unit_leader_promote_from_ranks_veteran = { #Unit leader scope, FROM is unit
#		effect = {
#			FROM = {
#				add_random_valid_trait_from_unit = {
#					character = ROOT
#				}
#			}
#		}
#	}
#
#	on_unit_leader_promote_from_ranks_green = { #Unit leader scope, FROM is unit
#		effect = {
#		}
#	}
#
#	on_add_history = { #Unit Scope
#		effect = {
#			#add_unit_medal_to_latest_entry = {
#			#	unit_medals = iron_cross_second_class
#			#} #This would add a unit medal to the history entry you just received
#		}
#	}
#
#}
#

# on_actions = {
	# on_force_government = {
		# effect = {
			# if = {
				# limit = {
					# has_government = democratic
					# REB={has_cosmetic_tag = NEW}
				# }
				# random_list = {
					# 10 = {
						# join_republic_populist = yes
					# }
					# 10={
						# join_republic_centrist = yes
					# }
				# }
			# }
		# }
	# }
# }
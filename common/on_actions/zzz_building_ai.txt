on_actions = {
	on_weekly = {
		effect = {
			if = {
				limit = {
					is_ai = yes
				}

				set_temp_variable = {highest_desired_building = 0}
				set_temp_variable = {highest_desired_building_desire_amount = 0}
				### Deciding what building to build
				
				# if = {
				# 	limit = {
				# 		check_variable = {highest_desired_building_desire_amount < temporary_desire_amount}
				# 	}
				# 	set_temp_variable = {highest_desired_building = temporary_desired_building}
				# }

				## Money first

				set_temp_variable = {money_per_day_target_multiplier = 4}
				if ={
					limit = {
						has_war = yes
					}
					set_temp_variable = {money_per_day_target_multiplier = 2}
				}
				## CORPORATE OFFICE
					if = {
						limit = {
							check_variable = {nmn < 5}
						}
						add_to_temp_variable = {temporary_desire_amount = 1000}
					}
					if = {
						limit = {
							set_temp_variable = {calculated_ratio = allexpenses}
							multiply_temp_variable = {calculated_ratio = money_per_day_target_multiplier}
							check_variable = {nmn < calculated_ratio}
						}
						add_to_temp_variable = {temporary_desire_amount = 100}
					}

					if = {
						limit = {
							check_variable = {highest_desired_building_desire_amount < temporary_desire_amount}
						}
						set_temp_variable = {highest_desired_building = token:corporate_office_1}
					}
					set_temp_variable = {temporary_desire_amount = 0}

				## Mil factories - total want
				## Higher Development do bigger weapons ( tanks and planes)

					## Calculates Most wanted military building
					# airplane_ai_skew_percentage
					# tanks_ai_skew_percentage
					# soft_arms_ai_skew_percentage
					# light_naval_ai_skew_percentage
					# heavy_naval_ai_skew_percentage

					## AIRPLANE WANTED BUILDING

					set_temp_variable = {airplanes_in_deployment = num_deployed_planes}
					set_temp_variable = {max_airplane_amount = 10000}
					set_temp_variable = {airplane_military_wanted_amount = 1}

					divide_temp_variable = {airplanes_in_deployment = max_airplane_amount}
					subtract_from_temp_variable = {airplane_military_wanted_amount = airplanes_in_deployment} ## shopuld be decimal 0 -1
					clamp_temp_variable = {
						max = 1
						min = 0.2
						var = airplane_military_wanted_amount
					}
					multiply_temp_variable = {airplane_military_wanted_amount = 200}
					multiply_temp_variable = {airplane_military_wanted_amount = airplane_ai_skew_percentage}

					set_temp_variable = {temporary_desire_amount = airplane_military_wanted_amount}
					
					if = {
						limit = {
							has_war = yes
						}
						multiply_temp_variable = {temporary_desire_amount = 2}
					}

					if = {
						limit = {
							check_variable = {highest_desired_building_desire_amount < temporary_desire_amount}
						}
						set_temp_variable = {highest_desired_building = token:starfighter_factory_1}
					}

					## TANKS WANTED BUILDING
					set_temp_variable = {temporary_desire_amount = 50}

					set_temp_variable = {armour_total_build_amount = total_equipment_produced_armor}
					if = {
						limit = {
							check_variable = {total_equipment_produced_armor < 100}
						}
						set_temp_variable = {temporary_desire_amount = 0}
					}


					divide_temp_variable = {airplanes_in_deployment = max_airplane_amount}
					subtract_from_temp_variable = {airplane_military_wanted_amount = airplanes_in_deployment} ## shopuld be around 100
					clamp_temp_variable = {
						max = 1
						min = 0.2
						var = airplane_military_wanted_amount
					}
					multiply_temp_variable = {airplane_military_wanted_amount = 200}
					multiply_temp_variable = {airplane_military_wanted_amount = airplane_ai_skew_percentage}

					set_temp_variable = {temporary_desire_amount = airplane_military_wanted_amount}
					
					if = {
						limit = {
							has_war = yes
						}
						multiply_temp_variable = {temporary_desire_amount = 2}
					}
					if = {
						limit = {
							check_variable = {highest_desired_building_desire_amount < temporary_desire_amount}
						}
						set_temp_variable = {highest_desired_building = token:starfighter_factory_1}
					}

				## BUILD ONCE
				## Tax over 80 million pop priotisied

				## research on 4 slots or more or high development

				## Training facilities - special forces for new republic, bootcamp for empire, Neutral either way

				## Fuel refienery - have fuel already 

				

				## Military Academy path based on which military is biggest

				## Homestead under 25 million manpower

				

				set_temp_variable = {desired_building = highest_desired_building}
				building_upgrade_manager = yes

				if = {
					limit = { ## UPGRADE 2
						NOT = {
							check_variable = {upgrade_version_2_of_building = 0}
						}
						any_owned_state = {
							or = {
								if = {
									limit = {
										check_variable = {building_1 = upgrade_version_1_of_building}
									}
									NOT = {
										has_variable = time_left_building_1
									}
								}else_if = {
									limit = {
										check_variable = {building_2 = upgrade_version_1_of_building}
									}
									NOT = {
										has_variable = time_left_building_2
									}
								}else = {
									always = no
								}
							}
							set_temp_variable = {state_located_for_building_changes = This.id}
						}
						check_variable = {buildings_money_chest_amount > upgrade_version_2_of_building_cost}
					}
					set_variable = { potential_cost_holder_for_event = upgrade_version_2_of_building_cost}
					var:state_located_for_building_changes = {
						set_variable = { potential_building_holder_for_event = upgrade_version_2_of_building }
						set_variable = { potential_time_left_building_holder_for_event = upgrade_version_2_of_building_speed}
					}
					subtract_from_variable = {buildings_money_chest_amount = upgrade_version_2_of_building_cost}
					subtract_from_variable = {currency_amount^primary_currency = upgrade_version_2_of_building_cost}
					if = {
						limit = {
							check_variable = {building_1 = upgrade_version_1_of_building}
							NOT = {
								has_variable = time_left_building_1
							}
						}
						add_building_to_construct_slot_1 = yes
					}else = {
						add_building_to_construct_slot_2 = yes
					}
				}else_if = { ## UPGRADE 3
					limit = {
						NOT = {
							check_variable = {upgrade_version_2_of_building = 0}
						}
						any_owned_state = {
							or = {
								if = {
									limit = {
										check_variable = {building_1 = upgrade_version_2_of_building}
									}
									NOT = {
										has_variable = time_left_building_1
									}
								}else_if = {
									limit = {
										check_variable = {building_2 = upgrade_version_2_of_building}
									}
									NOT = {
										has_variable = time_left_building_2
									}
								}else = {
									always = no
								}
							}
							set_temp_variable = {state_located_for_building_changes = This.id}
						}
						check_variable = {buildings_money_chest_amount > upgrade_version_3_of_building_cost}
					}
					set_variable = { potential_cost_holder_for_event = upgrade_version_3_of_building_cost}
					var:state_located_for_building_changes = {
						set_variable = { potential_building_holder_for_event = upgrade_version_3_of_building }
						set_variable = { potential_time_left_building_holder_for_event = upgrade_version_3_of_building_speed}
					}
					subtract_from_variable = {buildings_money_chest_amount = upgrade_version_3_of_building_cost}
					subtract_from_variable = {currency_amount^primary_currency = upgrade_version_3_of_building_cost}
					if = {
						limit = {
							check_variable = {building_1 = upgrade_version_2_of_building}
							NOT = {
								has_variable = time_left_building_1
							}
						}
						add_building_to_construct_slot_1 = yes
					}else = {
						add_building_to_construct_slot_2 = yes
					}
				}else_if = { ## NEW
					limit = {
						check_variable = {buildings_money_chest_amount > upgrade_version_1_of_building_cost}
					}
					set_variable = { potential_cost_holder_for_event = upgrade_version_1_of_building_cost}
					subtract_from_variable = {buildings_money_chest_amount = upgrade_version_1_of_building_cost}
					subtract_from_variable = {currency_amount^primary_currency = upgrade_version_1_of_building_cost}
					random_owned_state = {
						limit = {
							has_avaliable_building_slot = yes
						}
						set_temp_variable = {state_located_for_building_changes = This.id}
						set_variable = { potential_building_holder_for_event = upgrade_version_1_of_building }
						set_variable = { potential_time_left_building_holder_for_event = upgrade_version_1_of_building_speed}
						if = {
							limit = {
								NOT = {
									has_variable = building_1
								}
							}
							add_building_to_construct_slot_1 = yes
						}else = {
							add_building_to_construct_slot_2 = yes
						}
					}
				}
			}
		}
	}
}